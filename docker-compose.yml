# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: ./cloudcomputingproject
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/employ_management_system?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 741852963dD@
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend-network
  # Frontend Service 
  app-client:
    build:
      context: ./QLNV 
      dockerfile: Dockerfile
      # args:
      #   REACT_APP_API_BASE_URL: http://localhost:8080/api/v1/employees
    ports:
      - "3000:3000"
    restart: always
    # depends_on:
    #   - app-server
    networks:
      - backend-network

  # Database Service (Mysql)
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: employ_management_system
      MYSQL_USER: admin
      MYSQL_PASSWORD: 741852963dD@
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend-network
  
# Volumes
volumes:
  db_data:
    driver: local

# Networks to be created to facilitate communication between containers
networks:
  backend-network:  
    driver: bridge
  # frontend:
  #   driver: bridge